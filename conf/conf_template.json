{
  "environment variables": {
    "description": "Sensitive information that we need to hide under environment variables, you will need to setup them manually in your system, if at least one missing error wil occurred.",
    "AWS_ACCESS_KEY_ID" : {
      "description" : "Access key id, you can get this from your aws account",
      "type" : "AWS access key ID, represented as string"
    },
    "AWS_SECRET_ACCESS_KEY" : {
      "description" : "AWS secret key,  you can get this from your aws account",
      "type" : "AWS secret key, represented as string"
    },
    "AWS_DYNAMO_ENDPOINT" : {
      "description": "Endpoint of your dynamo db, can be found in information panel of your DynamoDB instance",
      "type" : "ip or domain name,as string"
    },
    "AWS_DEFAULT_REGION" : {
      "description": "Region of your DynamoDB instance, NOTE THIS IS NOT REGION NAME",
      "type": "REGION column from https://docs.aws.amazon.com/general/latest/gr/rande.html#ddb_region as string"
    },
    "AWS_BUCKET_NAME" : {
      "description" : "AWS S3 bucket name, where files are stored",
      "type" : "AWS bucket name, represented as string"
    },
    "GO_MYSQL_DSN": {
      "important": "NO NEED TO PROVIDE DATABASE NAME",
      "description": "https://en.wikipedia.org/wiki/Data_source_name , basically this is string to connect to MYSQL",
      "type": "DSN, example 'username:password@tcp(localhost:3306)/'"
    },
    "GOHUM_EAMIL_PASSWORD" : {
      "description": "Password to gohum email account.",
      "type" : "String"
    }
  },
  "config.json": {
    "description": "In config.json we have not sensitive configuration information",
    "ip": {
      "default": "127.0.0.1",
      "type": "ip or domain name, as string",
      "description": "ip address that will be used to run our server"
    },
    "port": {
      "default": "8080",
      "type": "string",
      "description": "port that will be used to run our server"
    },
    "login_url": {
      "default": "http://127.0.0.1:8080",
      "type": "ip or domain name",
      "description": "Path to login page of GoHum"
    },
    "work_dir": {
      "default": "$GOPATH/src/go-team-room",
      "type": "string, path to directory",
      "description": "Absolute path to directory with main.go."
    },
    "static_dir": {
      "default": "$GOPATH/src/go-team-room/client/dist",
      "type": "string, path to directory",
      "description": "Absolute path to directory with static files."
    },
    "MAX_MESSAGES_AT_ONCE": {
      "default": "1000",
      "type": "int",
      "description": "Max messages returned by once req."
    },
    "MAX_CHATROOMS": {
      "default": "1000",
      "type": "int",
      "description": "Max number of chatRooms for one user."
    },
    "send_emails": {
      "default": false,
      "type": "boolean",
      "description": "Enable or disable email send."
    },
    "smtp_server":{
      "default": "smtp.gmail.com",
      "type": "string",
      "description": "Smtp server hostname"
    },
    "smtp_port":{
      "default": 587,
      "type": "int",
      "description": "Smtp server port"
    },
    "gohum_email":{
      "default": "gohum.assistant@gmail.com",
      "type": "string",
      "description": "Email address of gohum."
    },
    "out": {
      "name": {
        "default": "stdout",
        "type": "string, name of stream for logging",
        "description": "stream to output communication channels "
      }
    },
    "level": {
      "default": "debug",
      "type": "string,  logging level",
      "description": "debug,info,warn,error,fatal, panic "
    },
    "formatter": {
      "name": {
        "default": "text",
        "type": "string,  formatter for logging",
        "description": "support text or json formmating logger "
      }
    },
    "hooks": [
      {
        "name": {
          "type": "string,  name of hook",
          "description": "hook which you will use"
        },
        "options": {
          "formatter": "json",
          "default": "text",
          "type": "string,  formatter for hook logging",
          "description": "type formatters when writing to local file "
        },
        "logfile": {
          "type": "string, work_dir + logfile + .%Y%m%d",
          "description": "filename must be passed, Path where a symlink for the actual log file is placed"
        },
        "rotatehours": {
          "default": "86400",
          "type": "string, sec",
          "description": "Interval between file rotation"
        },
        "maxdays": {
          "default": "7",
          "type": "string, days",
          "description": "Time to wait until old logs are purged"
        }
      }]
  }
}

